version: "3"
services:
  db:
    image: mysql:5.6  
    environment:
      - MYSQL_HOST=localhost
      - MYSQL_DATABASE=opsmanage
      - MYSQL_USER=root
      - MYSQL_PASSWORD=123456789
      - MYSQL_ROOT_PASSWORD=123456789
    volumes:
      - /Users/slan/DockerData/opsmanage/data/apps/mysql:/var/lib/mysql
    restart: always  
    networks:
      - default
  redis:
     container_name: redis
     image: redis:3.2.8
     command: redis-server 
     ports:
       - "6379:6379"
     volumes:
       - /Users/slan/DockerData/opsmanage/data/apps/redis:/data/redis
     networks:
       - default  
  rabbitmq:
     container_name: rabbitmq
     image: rabbitmq:management
     ports:
       - "5672:5672"
       - "15672:15672"
     networks:
       - default  

  ops_web:
     image: opsmanage-base:latest
     container_name: ops_web
     environment:
       MYSQL_DATABASE: opsmanage
       MYSQL_USER: "root"
       MYSQL_PASSWORD: "123456789"
     ports:
       - "8000:8000" #vim /mnt/OpsManage/OpsManage/settings.py文件里面的DEBUG设置为DEBUG = True 
     volumes:
       - /Users/slan/work/opsManage:/data/apps/opsmanage
       - /Users/slan/DockerData/opsmanage/upload:/data/apps/opsmanage/upload
       - /Users/slan/DockerData/opsmanage/logs:/data/apps/opsmanage/logs
     #command: bash /Users/slan/work/opsManage/docker/start.sh
     command: bash /data/apps/opsmanage/docker/start.sh
     links:
       - db
       - redis
       - rabbitmq
     depends_on:
       - db
       - redis
       - rabbitmq
     #restart: always
     networks:
       - default  

#  nginx:
#     image: opsmanage-nginx
#     container_name: nginx
#     ports:
#       - "80:80"   
#     volumes:
#       - /mnt/OpsManage/static:/usr/share/nginx/html/static
#     depends_on:
#       - ops_web
#     links:
#       - ops_web:ops_web
#     networks:
#       - default
networks:
  default:
